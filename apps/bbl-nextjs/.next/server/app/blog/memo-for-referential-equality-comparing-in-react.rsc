0:[[["",{"children":["blog",{"children":[["id","memo-for-referential-equality-comparing-in-react","d"],{"children":["",{}]}]}]},null,null,true],"$L1",["$L2",null]]]
3:I{"id":"4503","chunks":["730:730-f0f598528cc484dd","185:app/layout-9383bb0c60f86351"],"name":"ThemeProvider","async":false}
4:I{"id":"6864","chunks":["730:730-f0f598528cc484dd","185:app/layout-9383bb0c60f86351"],"name":"","async":false}
5:I{"id":"935","chunks":["272:webpack-43cb8370814af9a9","680:8866857e-0348eef442260c24","14:14-47fa5bfc81e5275e"],"name":"","async":false}
6:I{"id":"1227","chunks":["272:webpack-43cb8370814af9a9","680:8866857e-0348eef442260c24","14:14-47fa5bfc81e5275e"],"name":"","async":false}
7:I{"id":"5730","chunks":["730:730-f0f598528cc484dd","964:964-fb81438760ba2bf7","880:app/project/page-7f19be5b34bbfb13"],"name":"","async":false}
9:I{"id":"4743","chunks":["730:730-f0f598528cc484dd","185:app/layout-9383bb0c60f86351"],"name":"","async":false}
a:I{"id":"9505","chunks":["730:730-f0f598528cc484dd","185:app/layout-9383bb0c60f86351"],"name":"","async":false}
2:[[["$","meta",null,{"charSet":"utf-8"}],["$","title",null,{"children":"BoBeen Lee"}],["$","meta",null,{"name":"description","content":"Front-end developer, TypeScript enthusiast"}],null,null,null,null,["$","meta",null,{"name":"keywords","content":"BoBeen Lee, React, React Native, Typescript, Javascript"}],null,[["$","meta",null,{"name":"theme-color","content":"#111827"}]],null,["$","meta",null,{"name":"viewport","content":"width=device-width, initial-scale=1, shrink-to-fit=no"}],null,null,["$","meta",null,{"name":"robots","content":"follow, index"}],null,null,null,null,null,null,null,[]],[["$","link",null,{"rel":"canonical","href":"https://bbl-nx.vercel.app/"}],null,null,null],null,null,[null,null,null,null,null],null,[null,["$","meta",null,{"property":"og:title","content":"BoBeen Lee"}],["$","meta",null,{"property":"og:description","content":"Front-end developer, TypeScript enthusiast"}],["$","meta",null,{"property":"og:url","content":"https://bbl-nx.vercel.app/"}],["$","meta",null,{"property":"og:site_name","content":"BoBeen Lee"}],null,null,null,[[["$","meta",null,{"property":"og:image","content":"https://bbl-nx.vercel.app/assets/quokka.webp"}]]],null,null,null,null,null,null,["$","meta",null,{"property":"og:type","content":"website"}]],[["$","meta",null,{"name":"twitter:card","content":"summary_large_image"}],["$","meta",null,{"name":"twitter:site","content":"@BoBeenLee"}],null,["$","meta",null,{"name":"twitter:creator","content":"@BoBeenLee"}],null,["$","meta",null,{"name":"twitter:title","content":"BoBeen Lee"}],["$","meta",null,{"name":"twitter:description","content":"Front-end developer, TypeScript enthusiast"}],[[["$","meta",null,{"name":"twitter:image","content":"https://bbl-nx.vercel.app/assets/quokka.webp"}],null]],null,null],null,[null,[["$","link",null,{"rel":"icon","href":"/favicons/favicon.ico"}],["$","link",null,{"rel":"icon","href":"/favicons/apple-icon-180x180.png","sizes":"180x180"}],["$","link",null,{"rel":"icon","href":"/favicons/favicon-32x32.png","type":"image/png","sizes":"32x32"}],["$","link",null,{"rel":"icon","href":"/favicons/favicon-16x16.png","type":"image/png","sizes":"16x16"}],["$","link",null,{"rel":"icon","href":"/favicons/manifest.json"}],["$","link",null,{"rel":"icon","href":"/static/favicons/favicon.svg"}]],[],null]]
1:[["$","html",null,{"lang":"en","suppressHydrationWarning":true,"children":[null,["$","body",null,{"className":"text-white bg-white dark:bg-gray-900 dark:text-black","children":[["$","$L3",null,{"attribute":"class","defaultTheme":"system","enableSystem":true,"children":["$","div",null,{"className":"flex flex-col flex-1 bg-white dark:bg-gray-900","children":[["$","$L4",null,{}],["$","main",null,{"className":"flex flex-col justify-center flex-1 px-8 bg-white dark:bg-gray-900","children":["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children"],"hasLoading":false,"template":["$","$L6",null,{}],"notFound":["$","div",null,{"className":"flex flex-col items-center w-full max-w-2xl py-12 mx-auto sm:py-20 sm:mb-16","children":[["$","h1",null,{"className":"font-bold text-3xl md:text-5xl tracking-tight mb-4 text-black dark:text-white","children":"Something went Wrong."}],["$","div",null,{"className":"mb-8 text-gray-600 dark:text-gray-400","children":"I'm guessing you spelled something wrong. Can you double check\n      that URL?"}],["$","$L7",null,{"className":"w-64 p-1 mx-auto font-bold text-center text-black bg-gray-200 rounded-md sm:p-4 dark:bg-gray-800 dark:text-white","href":"/","children":"Home"}]]}],"notFoundStyles":[],"childProp":{"current":["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children"],"hasLoading":false,"template":["$","$L6",null,{}],"childProp":{"current":["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children",["id","memo-for-referential-equality-comparing-in-react","d"],"children"],"hasLoading":false,"template":["$","$L6",null,{}],"childProp":{"current":["$L8",null,null,[]],"segment":""}}],"segment":["id","memo-for-referential-equality-comparing-in-react","d"]}}],"segment":"blog"}}]}],["$","$L9",null,{}]]}]}],["$","$La",null,{"async":true,"strategy":"afterInteractive","src":"https://www.googletagmanager.com/gtag/js?id=G-TZZNKPFDD5"}],["$","$La",null,{"id":"gtag","async":true,"strategy":"afterInteractive","dangerouslySetInnerHTML":{"__html":"\nwindow.dataLayer = window.dataLayer || [];\nfunction gtag(){dataLayer.push(arguments);}\ngtag('js', new Date());\n\ngtag('config', 'G-TZZNKPFDD5');\n      "}}]]}]]}],null,null,[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/7fc6f9585b0bc593.css","precedence":"next.js"}],["$","link","1",{"rel":"stylesheet","href":"/_next/static/css/be7ec14a9e7399cd.css","precedence":"next.js"}]]]
b:I{"id":"7964","chunks":["730:730-f0f598528cc484dd","964:964-fb81438760ba2bf7","880:app/project/page-7f19be5b34bbfb13"],"name":"","async":false}
8:["$","div",null,{"className":"flex flex-col items-start flex-1 w-full max-w-2xl mx-auto mb-8 border-gray-200 sm:mb-12 dark:border-gray-700","children":[["$","a",null,{"className":"pb-2 font-bold text-3xl tracking-tigh text-black dark:text-white","children":"React에서 참조 동일성을 비교하는 방법"}],["$","div",null,{"className":"flex flex-row items-center justify-between w-full mt-2","children":[["$","div",null,{"className":"flex flex-row items-center","children":[["$","div",null,{"className":"w-6 h-6 relative rounded-full overflow-hidden","children":["$","$Lb",null,{"alt":"avatar","fill":true,"src":"/assets/quokka.png","priority":true}]}],["$","p",null,{"className":"ml-2 text-sm text-gray-600 dark:text-gray-400","children":"BoBeen Lee"}]]}],["$","p",null,{"className":"text-sm text-gray-600 dark:text-gray-400","children":"July 23, 2022"}]]}],["$","article",null,{"className":"w-full mt-4 prose dark:prose-dark max-w-none","dangerouslySetInnerHTML":{"__html":"<h2>Background</h2>\n<ul>\n<li>React 개발을 하면서 props 전달 시, object,array,function 형식의 참조 구문으로 전달할 경우가 생긴다.</li>\n<li>컴포넌트 리렌더링 진행 시 참조 동일성을 생각하지 않고 작성했을 경우, 하위 요소들까지 매번 리렌더링이 발생하는 현상을 겪을 수 있다.</li>\n<li>ex) LoginForm 컴포넌트 input object props전달 예시</li>\n</ul>\n<pre><code>export function LoginForm(props: SeperatorProps) {\n  const [email, setEmail] = useState('');\n  const inputProps = { size: 24 };\n  return (\n    &#x3C;Form>\n      &#x3C;Label>email&#x3C;/Label>\n      &#x3C;Input name=\"email\" value={email} {...inputProps} />\n      &#x3C;Seperator />\n    &#x3C;/Form>\n  );\n}\n</code></pre>\n<ul>\n<li>로그인 폼이 email값이 아닌 이외의 값으로 변경될때에도 Input컴포넌트가 리렌더링 시도할 것이다.</li>\n<li>참조 동일성을 유지하려면 어떻게 해야할까?\n<ul>\n<li>이와 관련된 부분은 <a href=\"https://reactjs.org/docs/hooks-reference.html#usecallback\">React Docs에 좋은 해결책</a>을 제시해주고 있다.</li>\n</ul>\n</li>\n</ul>\n<h2>Solution</h2>\n<p>React hooks, React.memo, React.PureComponent, shouldComponentUpdate에 대해선 많은 참조 문서들이 있으니 따로 설명하진 않고 링크만 남겨두고자한다.</p>\n<ul>\n<li>\n<p><code>useMemo</code>, <code>useCallback</code>, <code>useRef</code></p>\n<ul>\n<li><a href=\"https://ko.reactjs.org/docs/hooks-reference.html#usememo\">useMemo</a></li>\n<li><a href=\"https://ko.reactjs.org/docs/hooks-reference.html#usecallback\">useCallback</a></li>\n<li><a href=\"https://ko.reactjs.org/docs/hooks-reference.html#useref\">useRef</a>\n<ul>\n<li>`ref 값은 리렌더링 사이에 파괴되지 않으며, 새로 생성되지도 않기에 좋은 대안이 될 수 있다.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><code>React.memo, React.PureComponent, shouldComponentUpdate</code></p>\n<ul>\n<li><a href=\"https://ko.reactjs.org/docs/react-api.html#reactmemo\">React.memo를 활용하기</a></li>\n<li><a href=\"https://ko.reactjs.org/docs/optimizing-performance.html#avoid-reconciliation\">class component 일 경우</a>\n<ul>\n<li>React.PureComponent</li>\n<li>shouldComponentUpdate\n<ul>\n<li>shallow 비교가 아닌 deep 비교일 경우 주로 사용합니다.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><code>memoize 함수를 이용한 참조 동일성 메모이제이션 적용</code></p>\n<ul>\n<li>위 경우는 React내부, 컴포넌트에서 props를 비교하여 memoized하거나 비교하여 리렌더링 여부를 결정해준다.</li>\n<li>React외부 호출에서 object,array,function를 재생성하는 경우가 있을 것이다. 이럴 경우 shallow compare로는 <a href=\"https://lodash.com/docs/4.17.15#memoize\">lodash memoize</a>를 이용할 수 있고 아래와 같이 deep한 비교를 위해서 만들어 작성한다면 React외부 호출을 유지한채 참조 동일성에서 발생한 리렌더링을 방지할 수 있을 것이다.</li>\n<li>ex) React외부 함수 호출 중 Response 내부에서 컨버팅하면서 발생하는 object, array</li>\n</ul>\n</li>\n<li>\n<p>준비물</p>\n<ul>\n<li><a href=\"https://lodash.com/docs/4.17.15#isEqual\">isEquals</a>\n<ul>\n<li>deepEquals를 하기위한 용도</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>memoize 함수</p>\n<ul>\n<li>ex) <a href=\"https://github.com/alexreardon/memoize-one\">memoise-one</a></li>\n</ul>\n</li>\n<li>\n<p>구현 예시</p>\n<pre><code>import memoizeOne from 'memoize-one';\nimport isEqual from 'lodash.isequal';\n\nexport const identity = &#x3C;T>(x: T): T => x;\n\nexport const deepMemoized = memoizeOne(identity, isEqual) as &#x3C;T>(x: T) => T;\n</code></pre>\n</li>\n</ul>\n"}}]]}]
